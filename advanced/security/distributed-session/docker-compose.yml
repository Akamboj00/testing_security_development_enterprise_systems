version: '3.3'

services:

  # "Redis is an open-source in-memory database project implementing a distributed,
  # in-memory key-value store with optional durability."
  # We use it here to store session tokens, in a way in which all services can
  # quickly access it for authentication purposes.
  # Think about it like a hash-map that you can access remotely.
  redis:
    image: "redis:latest"


  # Having 2 different services ("auth" and "user-service") accessing a SQL database.
  # Those must be different running instances.
  # Different services should not access the same database (apart from Redis dealing
  # with distributed session tokens).
  auth-db:
    image: "postgres:10"

  user-service-db:
    image: "postgres:10"


  scg:
    build:
      context: ./ds-scg
      dockerfile: Dockerfile
    ports:
      - "80:8080"
    depends_on:
      - redis


  user-service:
    build:
      context: ./ds-user-service
      dockerfile: Dockerfile
    depends_on:
      - redis
      - user-service-db

  greetings:
    build:
      context: ./ds-greetings
      dockerfile: Dockerfile
    depends_on:
      - redis
      - user-service

  auth:
    build:
      context: ./ds-auth
      dockerfile: Dockerfile
    depends_on:
    - redis
    - auth-db