package org.tsdes.advanced.rest

import  org.junit.jupiter.api.AfterAll
import  org.junit.jupiter.api.BeforeAll
import  org.junit.jupiter.api.BeforeEach
import  org.junit.jupiter.api.Test
import  org.junit.jupiter.api.Assertions.*
import  io.restassured.RestAssured
import  io.restassured.RestAssured.given
import  org.evomaster.client.java.controller.api.EMTestUtils.*
import  org.evomaster.client.java.controller.SutHandler
import  org.evomaster.client.java.controller.db.dsl.SqlDsl.sql


/**
 * This file was automatically generated by EvoMaster on 2019-08-16T17:03:06.983+02:00[Europe/Oslo]
 * <br>
 * The generated test suite contains 32 tests
 * <br>
 * Covered targets: 243
 * <br>
 * Used time: 0h 10m 0s
 * <br>
 * Needed budget for current results: 99%
 */
internal class EvoMasterTest {

    
    companion object {
        private val controller : SutHandler = org.tsdes.advanced.rest.evomaster.EvoMasterDriver()
        private lateinit var baseUrlOfSut: String
        
        
        @BeforeAll
        @JvmStatic
        fun initClass() {
            baseUrlOfSut = controller.startSut()
            assertNotNull(baseUrlOfSut)
            RestAssured.urlEncodingEnabled = false
        }
        
        
        @AfterAll
        @JvmStatic
        fun tearDown() {
            controller.stopSut()
        }
    }
    
    
    @BeforeEach
    fun initTest() {
        controller.resetStateOfSUT()
    }
    
    
    
    
    @Test
    fun test0()  {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/9IaPJzFm")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test1()  {
        
        var location_books : String? = ""
        
        location_books = given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"VFkoleFcRlz\"," + 
                    "\"title\": \"OoOx\"," + 
                    "\"year\": 119.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201)
                .extract().header("location");
                
        assertTrue(isValidURIorEmpty(location_books));
        
        given().accept("*/*")
                .delete(resolveLocation(location_books, baseUrlOfSut + "/api/books/PbbACHiY8GRAhOwK"))
                .then()
                .statusCode(204);
    }
    
    
    @Test
    fun test2()  {
        val insertions = sql().insertInto("BOOK", 296L)
                .d("ID", "633941544")
                .d("YEAR", "2200")
            .and().insertInto("BOOK", 295L)
                .d("ID", "-7972860764859285797")
                .d("YEAR", "-8028")
            .and().insertInto("BOOK", 294L)
                .d("ID", "-740708643")
                .d("YEAR", "1944")
            .and().insertInto("BOOK", 293L)
                .d("ID", "680834047")
                .d("YEAR", "-8746")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        var location_books : String? = ""
        
        location_books = given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"RcLhoAVj\"," + 
                    "\"title\": \"psce1EaE1TW4Mee\"," + 
                    "\"year\": 112.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201)
                .extract().header("location");
                
        assertTrue(isValidURIorEmpty(location_books));
        
        given().accept("*/*")
                .delete(resolveLocation(location_books, baseUrlOfSut + "/api/books/Gx2WtrPA1WV7Dqz"))
                .then()
                .statusCode(204);
    }
    
    
    @Test
    fun test3()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"ABAM9ri9Qi\"," + 
                    "\"id\": \"h_3ZCz2y6DN_\"," + 
                    "\"title\": \"1kf\"," + 
                    "\"year\": 305.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/6BCyFtHCwDj")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test4()  {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/Fy1fHvMJiNeeY")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/m9kyNTsE")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"AsoCqtvhZRxWds\"," + 
                    "\"title\": \"AJ1WibNTyhGQYIM\"," + 
                    "\"year\": 575.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/7")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"hGb\"," + 
                    "\"id\": \"I2IUMBygNI9flWc3\"," + 
                    "\"year\": 510.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"year\": 988.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test5()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"McSh`\u003eI@ffD\"," + 
                    "\"id\": \"NcLlia@IDed\"," + 
                    "\"title\": \"LiYfbJDhg-xnB{Ws\"," + 
                    "\"year\": 1875.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/GU%5B%5B5cnOHWeo:z")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test6()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/P20b")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test7()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"\"," + 
                    "\"id\": \"5MiJJwNZB\"," + 
                    "\"year\": 497.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/kBCxRxA7BHV_")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"vFnHE\"," + 
                    "\"id\": \"GkvkatzS82glI\"," + 
                    "\"year\": 793.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/rnF")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/u5A7awAYca")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"Fi1L\"," + 
                    "\"title\": \"6WNU9K\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/4")
                .then()
                .statusCode(404);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"00xQZFdnHJZnJ\"," + 
                    "\"title\": \"LJNqBfjbN0f\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/i4H")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test8()  {
        
        var location_books : String? = ""
        
        location_books = given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"i;hH;T4\"," + 
                    "\"title\": \"7H4OF1FO\"," +
                    "\"year\": -7080.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201)
                .extract().header("location");
                
        assertTrue(isValidURIorEmpty(location_books));
        
        given().accept("*/*")
                .get(resolveLocation(location_books, baseUrlOfSut + "/api/books/fgLDiz4U"))
                .then()
                .statusCode(200);
    }
    
    
    @Test
    fun test9()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"PhJxtNb\"," + 
                    "\"id\": \"DzTYEcm3XnwTJhf\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test10()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"oEd\"," + 
                    "\"title\": \"p\u003ej\"," + 
                    "\"year\": 1921.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test11()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"z9fR9eYSWGf5\"," + 
                    "\"title\": \"QCpqc87wZVXlMSn\"," + 
                    "\"year\": 852.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
    }
    
    
    @Test
    fun test12()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"title\": \"p\u003ej\"," + 
                    "\"year\": 1921.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test13()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
    }
    
    
    @Test
    fun test14()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"7mBPK9mhjUxo\"," + 
                    "\"title\": \"T4jacG2rDv9\"," + 
                    "\"year\": 464.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/T2i7Lmq_mp8")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"T2i7Lmq_mp8\"," + 
                    "\"year\": 499.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/TBMMsJi")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
    }
    
    
    @Test
    fun test15()  {
        val insertions = sql().insertInto("BOOK", 266L)
                .d("ID", "-2067447479")
                .d("YEAR", "-69752")
            .and().insertInto("BOOK", 265L)
                .d("ID", "1859528813")
                .d("YEAR", "2024")
            .and().insertInto("BOOK", 264L)
                .d("ID", "998936414")
                .d("YEAR", "-156687")
            .and().insertInto("BOOK", 263L)
                .d("ID", "-1606642652")
                .d("YEAR", "-228872")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"71\"," + 
                    "\"id\": \"2\"," + 
                    "\"title\": \"gi{\"," + 
                    "\"year\": -1601.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/V6")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"year\": 1.11492157E8" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/CHjeSfQ,4NphDwqm")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/HZeJrT;dwm")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test16()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"rBIFebUyrA2pN8\"," + 
                    "\"id\": \"qK95EDag\"," + 
                    "\"title\": \"PCm\"," + 
                    "\"year\": 186.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/1tHVRDpumjLwSaW")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/fLMu")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/O")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"hvB1bFd\"," + 
                    "\"title\": \"Fd7muK\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/TfX4n1yjnEng")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"\"," + 
                    "\"id\": \"IZLlkSf_feIyOwWi\"," + 
                    "\"title\": \"xJkLq8GWKQBM3YXv\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"2QhOMusyj74W\"," + 
                    "\"year\": 342.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{}")
                .put(baseUrlOfSut + "/api/books/Q57wcKGGRptRobv1")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test17()  {
        
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"title\": \"NiFyH7NSHUwE\"," + 
                    "\"year\": 351.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test18()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"tiko\"," + 
                    "\"id\": \"8hwO\"," + 
                    "\"title\": \"UPtel3ifZKf\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"3z9m8bh10\"," + 
                    "\"title\": \"XTsbtaUQ\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"title\": \"oMUoIw\"," + 
                    "\"year\": 630.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"SY7v73\"," + 
                    "\"id\": \"FnPkI11T\"," + 
                    "\"title\": \"lkJY\"," + 
                    "\"year\": 271.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"gwdltfq58\"," + 
                    "\"year\": 548.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"hIaXoEM\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"FNQFde\"," + 
                    "\"title\": \"hGg5zXuSIRkmSa\"," + 
                    "\"year\": 365.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"x\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
    }
    
    
    @Test
    fun test19()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/5")
                .then()
                .statusCode(404);
    }
    
    
    @Test
    fun test20()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"mSbaj\"," + 
                    "\"id\": \"zf4iQ\"," + 
                    "\"title\": \"07g7pbhzeVOsK\"," + 
                    "\"year\": 512.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"6y\"," + 
                    "\"title\": \"d\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"OpSL4SAZn_calKUu\"," + 
                    "\"title\": \"QnA\"," + 
                    "\"year\": 576.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"0OicWH5pMeg_b5nP\"," + 
                    "\"title\": \"CawsVNR\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
    }
    
    
    @Test
    fun test21()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"gZHI\"," + 
                    "\"title\": \"AaF7XL0kwE\"," + 
                    "\"year\": 816.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
    }
    
    
    @Test
    fun test22()  {
        
        var location_books : String? = ""
        
        location_books = given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"g\"," + 
                    "\"title\": \"Eq60l3gfn9g3Zm\"," + 
                    "\"year\": 666.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201)
                .extract().header("location");
                
        assertTrue(isValidURIorEmpty(location_books));
        
        given().accept("*/*")
                .get(resolveLocation(location_books, baseUrlOfSut + "/api/books/WkoYW_Nr07F5c"))
                .then()
                .statusCode(200);
    }
    
    
    @Test
    fun test23()  {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/pMB5NZ1%C2%85EzMjXbnD")
                .then()
                .statusCode(404);
    }
    
    
    @Test
    fun test24()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/3")
                .then()
                .statusCode(404);
    }
    
    
    @Test
    fun test25()  {
        
        var location_books : String? = ""
        
        location_books = given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"EEux3p25cCl0a2\"," + 
                    "\"title\": \"Uc\"," + 
                    "\"year\": 909.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201)
                .extract().header("location");
                
        assertTrue(isValidURIorEmpty(location_books));
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"NkqePNqqvpKh0\"," + 
                    "\"title\": \"BD\"," + 
                    "\"year\": 217.0" + 
                    "}")
                .put(resolveLocation(location_books, baseUrlOfSut + "/api/books/yZpXOqSZK0UGdsGw"))
                .then()
                .statusCode(409);
    }
    
    
    @Test
    fun test26()  {
        val insertions = sql().insertInto("BOOK", 266L)
                .d("ID", "-2067446460")
                .d("YEAR", "-69844")
            .and().insertInto("BOOK", 265L)
                .d("ID", "1859527277")
                .d("YEAR", "2072")
            .and().insertInto("BOOK", 264L)
                .d("ID", "998936414")
                .d("YEAR", "-156815")
            .and().insertInto("BOOK", 263L)
                .d("ID", "-1606642588")
                .d("YEAR", "-228848")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"7-\"," + 
                    "\"id\": \"6\"," + 
                    "\"title\": \"igy\"," + 
                    "\"year\": 199.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/6")
                .then()
                .statusCode(404);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/CHjeSjQ00NphDwum")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/GZeJr;dsk")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test27()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"\"," + 
                    "\"year\": 87.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/7")
                .then()
                .statusCode(409);
    }
    
    
    @Test
    fun test28()  {
        val insertions = sql().insertInto("BOOK", 266L)
                .d("ID", "-2067361287")
                .d("YEAR", "1688")
            .and().insertInto("BOOK", 265L)
                .d("ID", "1859468020")
                .d("YEAR", "1071")
            .and().insertInto("BOOK", 264L)
                .d("ID", "999010467")
                .d("YEAR", "93")
            .and().insertInto("BOOK", 263L)
                .d("ID", "-1606658423")
                .d("YEAR", "-619")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/FYoIr;hg")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test29()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"!gNj\"," + 
                    "\"id\": \"i#8J~d0g\"," + 
                    "\"title\": \"\\fUZ\"," +
                    "\"year\": 5127.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/%0DQ")
                .then()
                .statusCode(404);
    }
    
    
    @Test
    fun test30()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"NIDYOmXF\"," + 
                    "\"title\": \"\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/;WllceAOPUSous=_")
                .then()
                .statusCode(405);
    }
    
    
    @Test
    fun test31()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"BwuTtSvn2GvAe\"," + 
                    "\"id\": \"Kku2U5hjT8_P\"," + 
                    "\"year\": 472.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books//")
                .then()
                .statusCode(405);
    }


}
